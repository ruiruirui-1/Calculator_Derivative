package calusee;
import java.util.*;

public class test1 {
	public static void main(String[] args) {
    		//Testcase
   	}
	public static String derivative(String input) {
        // 检查输入是否包含x
        int Index = input.indexOf('x');
        if (Index == -1) {
            return "0";
        }

        // 处理系数部分
        String coeffStr = input.substring(0, Index);
        int coeff = 1;
        if (!coeffStr.isEmpty()) {
            if (coeffStr.equals("+")) {
                coeff = 1;
            } else if (coeffStr.equals("-")) {
                coeff = -1;
            } else {
                try {
                    coeff = Integer.parseInt(coeffStr);
                } catch (NumberFormatException e) {
                    return "0"; // 无效系数视为0
                }
            }
        }

        // 处理指数部分
        String after = input.substring(Index + 1);
        int exponent = 1;
        if (!after.isEmpty() && after.charAt(0) == '^') {
            String exponentStr = after.substring(1);
            try {
                exponent = Integer.parseInt(exponentStr);
            } catch (NumberFormatException e) {
                return "0";
            }
        }

        // 计算导数的系数和指数
        int coeffDerivative = coeff * exponent;
        int exponentDerivative = exponent - 1;

        if (coeffDerivative == 0) {
            return "0";
        }

        
        StringBuilder result = new StringBuilder();

        // 处理系数
        if (exponentDerivative == 0) {
            result.append(coeffDerivative);
        } else {
            if (coeffDerivative == 1) {
                // 不需要添加系数
            } else if (coeffDerivative == -1) {
                result.append('-');
            } else {
                result.append(coeffDerivative);
            }
        }

        // 处理变量
        if (exponentDerivative != 0) {
            result.append('x');
            if (exponentDerivative != 1) {
                result.append("^").append(exponentDerivative);
            }
        }

        return result.toString();
    }
}
